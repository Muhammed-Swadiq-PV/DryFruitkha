<%- include('../layouts/adminHeader') %>




<div class="alert alert-danger alert-dismissible fade show" role="alert" id="errorMessage" style="display: none;">
  <!-- Error message goes here -->
  <% if(typeof req !== 'undefined' && req.query.error) { %>
    <div class="alert alert-danger alert-dismissible fade show" role="alert" id="errorMessage">
      <%= req.query.error %>
      <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
  <% } %>
</div>
   

  <!-- Button to trigger modal -->
  <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addCategoryModal">
    Add New Category
  </button>
 
  <!-- Modal for add category  -->
<div class="modal fade" id="addCategoryModal" tabindex="-1" aria-labelledby="addCategoryModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-md">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="addCategoryModalLabel">Add New Category</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        

        <!-- Form for adding category -->
        <form action="/admin/add-category" method="post">
          <div class="mb-3">
              <label for="categoryName" class="form-label">Category Name</label>
              <input type="text" class="form-control" id="categoryName" name="categoryName" required>
              <div class="modal-body">
                <div id="errorMessageDiv" class="text-danger"></div>
                <!-- Rest of the form and modal content -->
                   
            </div>
             
          </div>
          
      
          <div class="mb-3">
              <label for="categoryDescription" class="form-label">Category Description</label>
              <textarea class="form-control" id="categoryDescription" name="categoryDescription" rows="3" required></textarea>
          </div>
          <button type="submit" class="btn btn-primary">Add Category</button>
      </form>
      </div> 
    </div>
  </div>
</div>



  <!-- responsive-table-for-the-category -->
<div class="container-fluid pt-4 px-4">
  <div class="row g-4">
    <div class="col-12">
      <div class="bg-light rounded h-100 p-4">
        <h6 class="mb-4">Category</h6>
        <div class="table-responsive">
          <table class="table table-striped">
            <thead class="table-dark">
              <tr>
                <th scope="col">#</th>
                <th scope="col">Name</th>
                <th scope="col">Description</th>
                <th scope="col">Edit</th>
              </tr>
            </thead>
            <tbody>
              <% if(categoryData.length > 0) {
                for(i = 0; i < categoryData.length; i++) { %>
                  <tr>
                    <td>
                      <%= i + 1 %>
                    </td>
                    <td>
                      <%= categoryData[i].name.trim() %>
                    </td>
                    <td>
                      <%= categoryData[i].description.trim() %>
                    </td>
                    <% if(categoryData[i].status === true) { %>
                      <td>
                        <a href="#confirmationPopUp" class="btn rounded-0 block-btn modalbtn" data-bs-toggle="modal"
                          data-id="<%= categoryData[i]._id %>" style="color:green; border: 1px solid green;">Listed</a>
                      </td>
                    <% } else { %>
                      <td>
                        <a href="#confirmationPopUp" data-id="<%= categoryData[i]._id %>" data-bs-toggle="modal"
                          class="btn rounded-0 unBlock-btn modalbtn" style="color:red; border: 1px solid red;">Delisted</a>
                      </td>
                    <% } %>
                    <td>
                      <button type="button" class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#editCategoryModal_<%= categoryData[i]._id %>">Edit Category</button>
                    </td>
                  </tr>
                  <!-- Edit Category Modal -->
                  <div class="modal fade" id="editCategoryModal_<%= categoryData[i]._id %>" tabindex="-1"
                    aria-labelledby="exampleModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                      <div class="modal-content">
                        <div class="modal-header">
                          <h1 class="modal-title fs-5" id="exampleModalLabel">Edit category name</h1>
                          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                          <div id="editCategoryErrorDiv" class="text-danger"></div>
                          <form id="editCategoryForm_<%= categoryData[i]._id %>">
                            <div class="mb-3">
                              <label for="recipient-name" class="col-form-label">Please change the name</label>
                              <input type="text" class="form-control" id="edit-category-name_<%= categoryData[i]._id %>" value="<%= categoryData[i].name %>" required>                            </div>
                            <div class="mb-3">
                              <label for="message-text" class="col-form-label">Edit description</label>
                              <textarea class="form-control" id="edit-category-description_<%= categoryData[i]._id %>" required><%= categoryData[i].description %></textarea>
                            </div>
                          </form>
                        </div>
                        <div class="modal-footer">
                          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                          <button type="button" class="btn btn-primary" onclick="saveChanges('<%= categoryData[i]._id %>')">Save changes</button>
                        </div>
                      </div>
                    </div>
                  </div>
                <% } %>
              <% } else { %>
                <tr>
                  <td>
                    <% if (req.query.error) { %>
                      <%= req.query.error %>
                    <% } else { %>
                      Category not found
                    <% } %>
                  </td>
                </tr>
              <% } %>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>


    

    
<script>
  const addCategory = async () => {
    const categoryName = document.getElementById('categoryName').value.trim();
    const categoryDescription = document.getElementById('categoryDescription').value.trim();
    const errorMessageDiv = document.getElementById('errorMessageDiv'); 

    var isError 

    try {
        const response = await fetch('/admin/add-category', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ categoryName, categoryDescription }),
        });

        const data = await response.json();

        if (response.ok) {
            
            window.location.href = '/admin/category';
        }else if(data.message) {
           
            errorMessageDiv.textContent = 'Already exist'
        }
    } catch (error) {
        console.error('Error:', error);
    }
};

</script>

<script>
  function saveChanges(categoryId) {
  console.log("inside the saveChanges");
  const categoryNameInput = document.getElementById(`edit-category-name_${categoryId}`);
  const categoryDescriptionInput = document.getElementById(`edit-category-description_${categoryId}`);
  const editCategoryErrorDiv = document.getElementById('editCategoryErrorDiv');

  const categoryName = categoryNameInput.value.trim();
  const categoryDescription = categoryDescriptionInput.value.trim();

  // Clear previous error messages
  editCategoryErrorDiv.textContent = '';

  if (!categoryName || !categoryDescription) {
    editCategoryErrorDiv.textContent = 'Name and description cannot be blank.';
    return;
  }

  // Fetch request
  fetch(`/admin/edit-category/${categoryId}`, {
    method: 'POST', 
    body: JSON.stringify({ updatedCategoryName: categoryName, updatedCategoryDescription: categoryDescription }),
    headers: {
      'Content-Type': 'application/json',
    },
  })
  .then(response => response.json())
  .then(data => {
    console.log(data);

    // Check if the response indicates success before hiding the modal
    if (data && data.message === 'Category updated successfully') {
      const modalElement = document.getElementById(`editCategoryModal_${categoryId}`);
      const bootstrapModal = new bootstrap.Modal(modalElement);
      
      
      $(modalElement).removeClass('show');
$('body').removeClass('modal-open');
$('.modal-backdrop').remove();

      
setTimeout(() => {
        window.location.reload();
      }, 500);
    } else {
      console.error('Error: Save operation failed');
    }
  })
  .catch(error => {
    console.error(error);
  });
}

</script>



 






    <%- include('../layouts/adminFooter') %>