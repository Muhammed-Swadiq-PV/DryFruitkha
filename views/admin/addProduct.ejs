<%- include('../layouts/adminHeader') %>

<div class="container-fluid pt-4 px-4">
    <div class="row g-4">
        <div class="col-12">
            <div class="bg-light rounded h-100 p-4">
                <h6 class="mb-4">Add Product</h6>
                
                <form id="productForm" action="/admin/product" method="post" enctype="multipart/form-data">
                    <div class="mb-3">
                        <label for="productImage" class="form-label">Product Image</label>
                        <input type="file" class="form-control" id="productImage" name="image" accept="image/*" multiple >
                        
                    </div>
                    <small id="productError" style="color: red;"></small>
                    <div class="mb-3">
                        <label for="productName" class="form-label">Product Name</label>
                        <input type="text" class="form-control" id="productName" name="name" >
                    </div>
                    <div class="d-flex">
                        <div class="flex-grow-1 mb-3">
                        <label for="category" class="form-label">Category</label>
                        <select class="form-control" id="category" name="category" >
                            <option value="">Select category</option>
                            <% Categories.forEach(category => { %>
                                <option value="<%= category._id %>"><%= category.name %></option>
                            <% }) %>
                        </select>
                    </div>
                    <div class="flex-grow-1 mb-3">
                        <label for="price" class="form-label">Price</label>
                        <input type="number" class="form-control" id="price" name="price" step="0.01">

                    </div>
                </div>
                    <div class="mb-3">
                        <label for="description" class="form-label">Description</label>
                        <textarea class="form-control" id="description" name="description" rows="4" ></textarea>

                    </div>
                    <div class="mb-3">
                        <label for="stock" class="form-label">Stock</label>
                        <input type="number" class="form-control" id="stock" name="stock" >

                    </div>
                    <button type="submit" class="btn btn-primary" onclick="return validateForm()">Add Product</button>
                </form>
            </div>
        </div>
        
    </div>
</div>

<script>

function showError(message, fieldId) {
    const errorDiv = document.createElement("div");
    errorDiv.className = "text-danger";
    errorDiv.innerHTML = message;

    const field = document.getElementById(fieldId);
    const parentDiv = field.parentElement;

    // Check if there is an existing error message for the field
    const existingError = parentDiv.querySelector(".text-danger");
    if (existingError) {
        existingError.innerHTML = message; // Update existing error message
    } else {
        parentDiv.appendChild(errorDiv); // Append error message if none exists
    }
}

function validateForm() {
    // Reset previous error messages
    clearErrorMessages();

    const productName = document.getElementById("productName").value.trim();
    const category = document.getElementById("category").value.trim();
    const price = document.getElementById("price").value.trim();
    const stock = document.getElementById("stock").value.trim();
    const description = document.getElementById("description").value.trim();
    const imageCount = document.getElementById("productImage").files.length;

    let isValid = true;

    // Validate Product Image
    if (imageCount === 0) {
        showError("Please add an image.", "productImage");
        isValid = false;
    }

    // Validate Product Name
    if (!productName) {
        showError("Please enter a product name.", "productName");
        isValid = false;
    }

    // Validate Category
    if (!category) {
        showError("Please select a category.", "category");
        isValid = false;
    }

    // Validate Price
    if (!price || isNaN(price) || parseFloat(price) <= 0) {
        showError("Please enter a valid price.", "price");
        isValid = false;
    }

    // Validate Stock
    if (!stock || isNaN(stock) || parseInt(stock) < 1) {
        showError("Please enter a valid stock quantity.", "stock");
        isValid = false;
    }

    // Validate Description
    if (!description) {
        showError("Please enter a product description.", "description");
        isValid = false;
    }

    return isValid;
}

function clearErrorMessages() {
    const errorMessages = document.getElementsByClassName("text-danger");
    for (let i = 0; i < errorMessages.length; i++) {
        errorMessages[i].remove();
    }
}

   
</script>

  
  

<%- include('../layouts/adminFooter') %>
