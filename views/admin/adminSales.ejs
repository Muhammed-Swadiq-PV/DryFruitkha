<%- include('../layouts/adminHeader') %>
    <div class="container mt-4">
        <div class="container text-center">
            <h1 class="text" style="text-decoration: underline;">SALES REPORT</h1>
        </div>
        <div class="row mt-3">
            <div class="date-filter mt-4">
                <div class="d-flex justify-content-center mt-4">
                    <div class="mr-2">
                        <div class="form-group">
                            <input class="with-box-shadow" type="date" id="startDate" name="startDate"
                                style="height: 20px; margin-right: 20px;" placeholder="Start Date">
                        </div>
                    </div>
                    <div class="ml-2">
                        <div class="form-group">
                            <input class="with-box-shadow" type="date" id="endDate" name="endDate" style="height: 20px;"
                                placeholder="End Date">
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12 text-center">
                        <button class="btn btn-warning mt-5" id="applyDateBtn" style="height: 42px;">Apply</button>
                    </div>
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <button class="btn btn-info mt-5" style="height: 42px;" id="downloadSalesReport">Download
                        Report</button>
                </div>
            </div>
        </div>
        <table class="table table-bordered table-thick">
            <thead class="thead-dark">
                <tr>
                    <th class="text-center col-md-2">DATE</th>
                    <th class="text-center col-md-2">ORDER ID</th>
                    <th class="text-center col-md-2">USERNAME</th>
                    <th class="text-center col-md-2">PAYMENT METHOD</th>
                    <th class="text-center col-md-2">TOTAL AMOUNT</th>
                </tr>
            </thead>
            <tbody id="userTableBody">
                <% orders.sort((a, b)=> new Date(b.orderDate) - new Date(a.orderDate)).forEach(order => { %>
                    <tr>
                        <td class="table-data text-center">
                            <%= order.orderDate ? order.orderDate.toISOString().split('T')[0] : '' %>
                        </td>
                        <td class="table-data text-center">#<%= order._id.toString().slice(0, 9) %>
                        </td>
                        <td class="table-data text-center">
                            <%= order.userId.Firstname%>
                        </td>
                        <td class="table-data text-center">
                            <%= order.payment %>
                        </td>
                        <td class="table-data text-center">₹<%= order.total %>
                        </td>
                    </tr>
                    <% }) %>
            </tbody>
        </table>
    </div>



    <script>
        document.getElementById('applyDateBtn').addEventListener('click', async function () {
            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;
            console.log(startDate, endDate);
            try {


                const response = await fetch(`/admin/adminsales?startDate=${startDate}&&endDate=${endDate}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        // Add any additional headers as needed
                    },
                    body: JSON.stringify({
                        startDate: startDate,
                        endDate: endDate,
                        
                    }),
                });

                if (response.ok) {
                    console.log("Working");
                    const data = await response.json();

                    
                    console.log(data)
                    updateTable(data);
                } else {
                    console.log("Not working");
                    // Handle non-ok responses
                }

                // Update the table with the new data
            } catch (error) {
                console.error('Error fetching data:', error);
            }
        });

        function updateTable(data) {
            const tableBody = document.getElementById('userTableBody');
            tableBody.innerHTML = ''; // Clear existing rows

            data.forEach(order => {
                const row = document.createElement('tr');
                row.innerHTML = `
                <td class="table-data text-center">${order.orderDate ? new Date(order.orderDate).toISOString().split('T')[0] : ''}</td>
                <td class="table-data text-center">#${order._id.toString().slice(0, 9)}</td>  
                <td class="table-data text-center">${order.userId.Firstname}</td>   
                <td class="table-data text-center">${order.payment}</td>   
                <td class="table-data text-center">₹${order.total}</td>
            `;
                tableBody.appendChild(row);
            });
        }
    </script>
    <script>
        // JavaScript code
        document.addEventListener('DOMContentLoaded', function () {
            console.log("inside the function for downloading");
        const downloadSalesReport = document.getElementById('downloadSalesReport');
        downloadSalesReport.addEventListener('click', function () {
          const startDate = document.getElementById('startDate').value;
          const endDate = document.getElementById('endDate').value;
          fetch(`/admin/download-salesReport?startDate=${startDate}&endDate=${endDate}`)
            .then((response) => response.json())
            .then((data) => {
              generateCSV(data);
            })
            .catch((error) => {
              console.error('Error:', error);   
            });
         });
       });
      
      
        // Updated generateCSV function
        function generateCSV(data) {
        const fields = ["DATE", "ORDER ID", "USERNAME", "PAYMENT METHOD", "TOTAL AMOUNT"];
        const opts = { fields };
        const json2csvParser = new json2csv.Parser(opts);
      
        try {
          const csv = json2csvParser.parse(data);
          const blob = new Blob([csv], { type: "text/csv" });
          const link = document.createElement("a");
          link.href = window.URL.createObjectURL(blob);
          link.download = "sales_report.csv";
          link.click();
        } catch (error) {
          console.error("Error generating CSV: " + error);
        }
      }
      </script>

    <%- include('../layouts/adminFooter') %>